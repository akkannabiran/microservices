input {
  	stdin { codec => json_lines }
}

filter {
  	if [documentType] == "events" {
    	aggregate {
      		task_id => "%{storeId}"
      		code => "
            	map['events'] ||= []
            	map['eventId'] ||= event.get('eventId')
            	map['storeId'] ||= event.get('storeId')
            	map['events'] << { 	
            		'eventId' => event.get('eventId'), 
            		'eventName' => event.get('eventName'),
            		'eventTypeId' => event.get('eventTypeId'),
            		'eventDescription' => event.get('eventDescription'),
            		'eventStartDate' => event.get('eventStartDate'),
           		 	'eventEndDate' => event.get('eventEndDate'),
            		'eventDuration' => event.get('eventDuration') 
            	}; "
      		push_previous_map_as_event => true
      		timeout => 5
      		timeout_tags => ['aggregated']
    	}
    	if "aggregated" not in [tags] {
      		drop {}
    	}
    	
    	mutate {
      		add_field => { "[@metadata][store-id]" => "%{storeId}" }
      		add_field => { "[@metadata][document_type]" => "store" }
      		remove_field => [ "storeId" ]
      		remove_field => [ "tags" ]
    	}
  	}
}

output {
  	elasticsearch {
    	action => "update"
    	hosts => "${ES_HOSTS:localhost:9200}"
    	user => "elastic"
    	password => "changeme"
    	index => "store_index"
    	document_type => "%{[@metadata][document_type]}"
    	document_id => "%{[@metadata][store-id]}"
    	parent => "%{[@metadata][store-id]}"
    	manage_template => false
  	}
}
